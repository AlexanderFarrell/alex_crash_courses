<h1>Math</h1>
<p>In programming, we can perform math.</p>
<hr>
<h2>What we can do</h2>
<p>Here's five different things we can do to start.</p>
<ul>
    <li>Adding</li>
    <li>Subtracting</li>
    <li>Multiplying</li>
    <li>Dividing</li>
    <li>Getting the Remainder</li>
</ul>
<hr>
<h2>Adding</h2>
<p>We add a and b together and set it to c.</p>
<pre><code>a = 10
b = 5
c = a + b</code></pre>
<p>c becomes 15</p>
<p>The variables a and b are unchanged here! a is still 10 and b is still 5.</p>
<hr>
<h2>Subtracting</h2>
<p>c is a minus b</p>
<pre><code>a = 10
b = 5
c = a - b</code></pre>
<p>c will be 5</p>
<p>a and b remain unchanged.</p>
<hr>
<h2>Multiplying</h2>
<p>c will be a times b</p>
<p>We use an asterisk for a multiplication symbol *</p>
<pre><code>a = 10
b = 5
c = a * b</code></pre>
<p>c will be 50</p>
<hr>
<h2>Dividing</h2>
<p>We divide a by b</p>
<p>We set c as the result</p>
<pre><code>a = 10
b = 5
c = a / b</code></pre>
<p>The answer will be 2</p>
<p><i>Optional Note: Python 2 and Python 3 are different with integers. Python 3 will convert to a float when needed, such as when doing 5 / 2, the result will be 2.5. In Python 2, the result will round down and be 2, only when they are integers.</i></p>
<hr>
<h2>Getting the Remainder (Modulo)</h2>
<p>In programming, we call a remainder a modulo. </p>
<p>We use the percent sign % to get a modulo.</p>
<pre><code>a = 9
b = 5
c = a % b</code></pre>
<p>The result is 4. We can get one 5 out of 9, but then we are left with 4.</p>
<hr>
<h3>Literals</h3>
<p>We don't have to use variables. We can just use a literal</p>
<pre><code>a = 9
c = a * 6</code></pre>
<p>In this case, 6 is a literal</p>
<hr>
<h3>More Literals</h3>
<p>We don't need to set a variable for everything!</p>
<pre><code>
c = 9 * 6</code></pre>
<hr>
<h3>No Variables</h3>
<p>We can use nothing but literals if we wish</p>
<pre><code>
print(9 * 6)</code></pre>
<hr>
<h3>Literals vs Variables</h3>
<p>Both are useful. </p>
<hr>
<p>Variables let us change the value later</p>
<pre><code>
a = 5
a = a + 9
print(a)</code></pre>
<hr>
<p>Variables are useful for when needed all over the place</p>
<pre><code>
app_name = "Awesome Game"
version = "1.0"

print(app_name)
print(version)

print("Loading...")
print(app_name)
print(" is now loaded!")</code></pre>

<p>With variables, if I don't like the name of the game, I can change it in one place. With literals, I'd have to change it everywhere.</p>
<p>It doesn't just take more time, it's also more susceptible to human error.</p>
<hr>
<p>Literals are helpful when we use them once, and they never change when the program is running.</p>
<pre><code>
a = 100
a = a / 2
print(a)</code></pre>
<hr>

<h1>Exercise</h1>
<p>Let's start off with two variables, which we will name a and b</p>
<pre><code>a = 50</code></pre>
<pre><code>b = 40</code></pre>
<hr>
<p>To add these together, we can do the following</p>
<pre><code>a + b</code></pre>
<hr>
<p>We add them but we don't do anything with it</p>
<p>Let's set it to a variable</p>
<pre><code>c = a + b</code></pre>
<p>c would now equal 90</p>
<hr>
<p>Let's print c</p>
<pre><code>print(c)</code></pre>
<p>The output should be 90</p>
<pre><code>90</code></pre>
<hr>
<h3>Review</h3>
<p>Here is a list of different math operations we can do:</p>
<div class="TwoColumn" style="grid-column-gap: 2em; grid-row-gap: 3em">
    <p style="text-align: right">Add</p>
    <pre><code>a + b</code></pre>
    <p style="text-align: right">Subtract</p>
    <pre><code>a - b</code></pre>
    <p style="text-align: right">Multiply</p>
    <pre><code>a * b</code></pre>
    <p style="text-align: right">Divide</p>
    <pre><code>a / b</code></pre>
    <p style="text-align: right">Remainder (which in programming we call a Modulo)</p>
    <pre><code>a % b</code></pre>
</div>
